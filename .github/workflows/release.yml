name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      semver:
        description: The semver to use
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
  pull_request:
    types: [closed]

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine bump-my-version

      - name: Optic Release Automation with custom bump
        uses: nearform-actions/optic-release-automation-action@v4 
        with:
          bump-command: bump-my-version bump
          get-version-command: bump-my-version show current_version
          semver: ${{ github.event.inputs.semver }}
          build-command: python -m build
          commit-message: "Release {version}"

      - name: Publish to PyPI
        if: ${{ github.event_name == 'pull_request' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
        
